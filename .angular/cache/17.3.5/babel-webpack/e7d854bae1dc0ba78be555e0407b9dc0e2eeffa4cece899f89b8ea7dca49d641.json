{"ast":null,"code":"import { WORKS } from 'src/assets/files/mock-works';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkListService {\n  constructor(http) {\n    this.http = http;\n    this.works = WORKS;\n    this.worksUrl = 'api/works';\n  }\n  getWorks() {\n    return this.http.get(this.worksUrl);\n  }\n  static #_ = this.ɵfac = function WorkListService_Factory(t) {\n    return new (t || WorkListService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkListService,\n    factory: WorkListService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["WORKS","WorkListService","constructor","http","works","worksUrl","getWorks","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/rodh24/Documents/Projects/Portfolio/src/app/services/work-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { WorkModel } from '../models/work.model';\nimport { WORKS } from 'src/assets/files/mock-works';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkListService {\n\n  works: WorkModel[] = WORKS;\n  private worksUrl= 'api/works'\n\n  constructor(private http: HttpClient) { }\n\n  getWorks():Observable<WorkModel[]>{\n    return this.http.get<WorkModel[]>(this.worksUrl);\n  }\n}\n"],"mappings":"AAEA,SAASA,KAAK,QAAQ,6BAA6B;;;AAOnD,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,KAAK,GAAgBJ,KAAK;IAClB,KAAAK,QAAQ,GAAE,WAAW;EAEW;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAc,IAAI,CAACF,QAAQ,CAAC;EAClD;EAAC,QAAAG,CAAA,G;qBATUP,eAAe,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfZ,eAAe;IAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}